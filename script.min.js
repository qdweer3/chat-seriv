let currentUser=null;function togglePage(e){document.querySelectorAll(".page").forEach(e=>{e.style.display="none"}),document.getElementById(e).style.display="block"}function login(){const e=document.getElementById("loginUsername").value,t=document.getElementById("loginPassword").value,o=JSON.parse(localStorage.getItem("users"))||[],n=o.find(t=>t.username===e&&t.password===t);n?(currentUser=e,togglePage("chatPage"),updateBadge()):alert("Invalid username or password.")}function register(){const e=document.getElementById("registerUsername").value,t=document.getElementById("registerPassword").value;if(e&&t){let o=JSON.parse(localStorage.getItem("users"))||[];o.push({username:e,password:t,createdAt:(new Date).getTime()}),localStorage.setItem("users",JSON.stringify(o)),currentUser=e,togglePage("chatPage"),updateBadge()}else alert("Please enter username and password.")}function appendToFile(e,t){const o=require("fs");o.appendFileSync(e,t)}function sendMessage(){const e=document.getElementById("messageInput"),t=e.value.trim();t&&(document.getElementById("chatMessages").appendChild((e=>{const t=document.createElement("div");return t.innerHTML=`<strong>${currentUser}</strong>: ${e}`,t})(t)),e.value="",updateBadge())}function isNewAccount(){const e=JSON.parse(localStorage.getItem("users"))||[],t=e.find(t=>t.username===currentUser);if(t){const o=(new Date).getTime()-t.createdAt;return o/(1e3*60*60*24)<=3}return!1}function updateBadge(){const e=document.getElementById("newAccountBadge");if(e){const t=isNewAccount();"none"===e.style.display&&t&&"inline-block"!==e.style.display?e.style.display="inline-block":"inline-block"===e.style.display&&!t&&"none"!==e.style.display&&(e.style.display="none")}}function logout(){currentUser=null,togglePage("loginPage")}
